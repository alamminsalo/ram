# Gitlab continuous integration script
# for ram

stages:
  - build
  - test
  - test-generate
  - deploy

build:
  image: rust:1.39-stretch
  stage: build 
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/cargo
  cache:
    paths:
      - target/
      - cargo/
  script:
    - cargo build --release
  artifacts:
    paths:
      - target/release/ram

codecov:
  image: xd009642/tarpaulin
  stage: test
  except:
    - tags
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/cargo
  cache:
    paths:
      - target/
      - cargo/
  script:
    - cargo tarpaulin --exclude-files openapi/** --exclude-files cargo/** -o Html
  artifacts:
    paths:
      - tarpaulin-report.html

# Tests for example configurations and templates
rust-rocket:
  stage: test-generate
  image: rust:1.39-stretch
  except:
    - tags
  script:
    - target/release/ram -c examples/rust/rocket/rocket.yaml -i examples/openapi/farm.yaml -o examples/rust/rocket/
    - cd examples/rust/rocket
    - rustup toolchain add nightly
    - cargo +nightly build
  artifacts:
    paths:
      - examples/rust/rocket/

rust-actix:
  stage: test-generate
  image: rust:1.39-stretch
  except:
    - tags
  script:
    - target/release/ram -c examples/rust/actix/actix.yml -i examples/openapi/farm.yaml -o examples/rust/actix/
    - cd examples/rust/actix
    - cargo build
  artifacts:
    paths:
      - examples/rust/actix/

rust-models:
  stage: test-generate
  image: rust:1.39-stretch
  except:
    - tags
  script:
    - target/release/ram -c examples/rust/models/config.yaml -i examples/openapi/farm.yaml -o examples/rust/models/
    - cd examples/rust/models
    - cargo build
  artifacts:
    paths:
      - examples/rust/models/


go-echo:
  stage: test-generate
  image: golang:1.13
  except:
    - tags
  script:
    - target/release/ram -c examples/go/echo/config.yaml -i examples/openapi/farm.yaml -o examples/go/echo
    - cd examples/go/echo
    - go get -u github.com/labstack/echo/...
    - go build
  artifacts:
    paths:
      - examples/go/echo/
      
go-squirrel:
  stage: test-generate
  image: golang:1.13
  except:
    - tags
  script:
    - target/release/ram -c examples/go/squirrel/templates/config.yaml -i examples/openapi/farm.yaml -o examples/go/squirrel
    - cd examples/go/squirrel
    - go get -u github.com/Masterminds/squirrel
    - go get -u github.com/jmoiron/sqlx
    - go build
  artifacts:
    paths:
      - examples/go/squirrel/

java-models:
  stage: test-generate
  image: maven:3-jdk-8
  except:
    - tags
  script:
    - target/release/ram -c examples/java/models/config.yaml -i examples/openapi/farm.yaml -o examples/java/models
    - cd examples/java/models
    - mvn install
    - java -jar target/App-1.jar
  artifacts:
    paths:
      - examples/java/models/

java-spark:
  stage: test-generate
  image: maven:3-jdk-8
  except:
    - tags
  script:
    - target/release/ram -c examples/java/spark/config.yaml -i examples/openapi/farm.yaml -o examples/java/spark
    - cd examples/java/spark
    - mvn install
    - java -jar target/SparkApp-1.jar
  artifacts:
    paths:
      - examples/java/spark/

postgres-schema:
  stage: test-generate
  image: postgres:10
  except:
    - tags
  script:
    - target/release/ram -c examples/postgresql/postgresql.yaml -i examples/openapi/farm.yaml -o examples/postgresql/
  artifacts:
    paths:
      - examples/postgresql

# ---- Deploy -----
deploy-dockerhub:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  only:
    - tags
  script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker build -t alam0/ram:$CI_COMMIT_TAG .
    - docker push alam0/ram:$CI_COMMIT_TAG
    - docker push alam0/ram:latest
